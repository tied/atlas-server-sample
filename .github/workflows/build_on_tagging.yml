# This is a basic workflow to help you get started with Actions

name: Build on tagging

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    tags:
      - '*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Get tag version
        id: get_tag_version
        run: echo ::set-output name=value::${GITHUB_REF/refs\/tags\//}
        
      - name: Get current version
        id: get_current_version
        run: echo ::set-output name=value::${atlas-mvn help:evaluate -Dexpression=project.version -q -DforceStdout | grep -v '\['}

      - name: Install Atlas-SDK
        id: install_atlas_sdk
        run: |
          sudo sh -c 'echo "deb https://packages.atlassian.com/debian/atlassian-sdk-deb/ stable contrib" >> /etc/apt/sources.list'
          wget https://packages.atlassian.com/api/gpg/key/public
          sudo apt-key add public
          sudo apt-get update
          sudo apt-get install atlassian-plugin-sdk
          atlas-version
        shell: bash

      - name: Install Java and Maven
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'

      - uses: actions/checkout@v2

      - name: Update version in pom.xml if does not match with the tag
        run: atlas-mvn -B versions:set -DnewVersion=${{ steps.get_tag_version.outputs.value }} -DgenerateBackupPoms=false
        if: ${{ steps.get_tag_version.outputs.value }} != ${{ steps.get_current_version.outputs.value }}

      - name: Packaging
        run: atlas-mvn package
        
      - name: Archive for download
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.get_tag_version.outputs.value }}
          path: target/*.jar

      # This is a side effect action, let do it last
      - name: Commit the changes to pom.xml
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github.action@atlasauthority.com"
          git add pom.xml
          git commit -m "Bumped version to ${{ steps.get_tag_version.outputs.value }}"
          git push
        if: ${{ steps.get_tag_version.outputs.value }} != ${{ steps.get_current_version.outputs.value }}
